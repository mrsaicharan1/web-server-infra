Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.

  SubnetId:
      Type: AWS::EC2::Subnet::Id
      Description: SubnetId of an existing subnet (for the primary network) in your
        Virtual Private Cloud (VPC)
      ConstraintDescription: must be an existing subnet in the selected Virtual Private
        Cloud.

Resources:
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: webserver-group2
      GroupDescription: Security Group for EC2
      VpcId: !Ref 'VpcId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: GoWebserver

# EC2 Instance
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: 'ami-0ff8a91507f77f867'
      InstanceType: t2.micro
      KeyName: chairs
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: '0'
          SubnetId: !Ref 'SubnetId'
          GroupSet: [!Ref 'MySecurityGroup']
      BlockDeviceMappings:
        - DeviceName: /dev/sdc
          VirtualName: ephemeral0

  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones:
      - "us-east-1a"
      Instances:
      - Ref: MyInstance
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
    DependsOn: MyInstance